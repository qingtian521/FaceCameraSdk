package sdk.facecamera.sdk.sdk;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * \u7cfb\u7edf\u7f51\u7edc\u4fe1\u606f<br>
 * <i>native declaration : FaceRecoDef.h:140</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SystemNetInfoEx extends Structure {
	/**
	 * \u7f51\u5361\u7269\u7406\u5730\u5740<br>
	 * C type : char[18]
	 */
	public byte[] mac = new byte[20]; //网卡MAC地址
	/**
	 * \u76f8\u673aip\u5730\u5740<br>
	 * C type : char[16]
	 */
	public byte[] ip = new byte[20]; //网卡IP地址
	/**
	 * \u5b50\u7f51\u63a9\u7801<br>
	 * C type : char[16]
	 */
	public byte[] netmask = new byte[20]; //网上子网掩码
	/**
	 * \u9ed8\u8ba4\u7f51\u5173<br>
	 * C type : char[16]
	 */
	public byte[] gateway = new byte[16]; // 网关
	/**
	 * \u4fdd\u7559<br>
	 * C type : char[14]
	 */

	public byte[] manufacturer = new byte[16]; // 制造商名称
	public byte[] platform = new byte[32];    // 平台名称
	public byte[] system = new byte[32];     // 系统名称
	public byte[] version = new byte[64]; // 版本
	public byte[] ip_2 = new byte[16];      // 网卡2IP地址
	public byte[] netmask_2 = new byte[16];  // 网卡2子网掩码
	public byte[] dns = new byte[16];        // 域名服务器地址
	public byte dhcp_enable;    // DHCP开关
	public byte[] resv= new byte[64];    // 保留


	public SystemNetInfoEx() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("mac", "ip", "netmask", "gateway","manufacturer","platform",
				"system","version","ip_2","netmask_2","dns","dhcp_enable", "resv");
	}
	/**
	 * @param mac_addr \u7f51\u5361\u7269\u7406\u5730\u5740<br>
	 * C type : char[18]<br>
	 * @param ip_addr \u76f8\u673aip\u5730\u5740<br>
	 * C type : char[16]<br>
	 * @param netmask \u5b50\u7f51\u63a9\u7801<br>
	 * C type : char[16]<br>
	 * @param gateway \u9ed8\u8ba4\u7f51\u5173<br>
	 * C type : char[16]<br>
	 * @param resv \u4fdd\u7559<br>
	 * C type : char[14]
	 */
//	public SystemNetInfoEx(byte mac_addr[], byte ip_addr[], byte netmask[], byte gateway[], byte resv[]) {
//		super();
//		if ((mac_addr.length != this.mac_addr.length))
//			throw new IllegalArgumentException("Wrong array size !");
//		this.mac_addr = mac_addr;
//		if ((ip_addr.length != this.ip_addr.length))
//			throw new IllegalArgumentException("Wrong array size !");
//		this.ip_addr = ip_addr;
//		if ((netmask.length != this.netmask.length))
//			throw new IllegalArgumentException("Wrong array size !");
//		this.netmask = netmask;
//		if ((gateway.length != this.gateway.length))
//			throw new IllegalArgumentException("Wrong array size !");
//		this.gateway = gateway;
//		if ((resv.length != this.resv.length))
//			throw new IllegalArgumentException("Wrong array size !");
//		this.resv = resv;
//	}
	public static class ByReference extends SystemNetInfoEx implements Structure.ByReference {
		
	};
	public static class ByValue extends SystemNetInfoEx implements Structure.ByValue {
		
	};
}
