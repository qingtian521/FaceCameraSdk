package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : discover_def.h:14</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ipscan_t extends Structure {
	/** C type : char[20] */
	public byte[] mac = new byte[20];
	/** C type : char[20] */
	public byte[] ip = new byte[20];
	/** C type : char[20] */
	public byte[] netmask = new byte[20];
	/** C type : char[16] */
	public byte[] manufacturer = new byte[16];
	/** C type : char[32] */
	public byte[] platform = new byte[32];
	/** C type : char[32] */
	public byte[] system = new byte[32];
	/** C type : char[64] */
	public byte[] version = new byte[64];
	public ipscan_t() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("mac", "ip", "netmask", "manufacturer", "platform", "system", "version");
	}
	/**
	 * @param mac C type : char[20]<br>
	 * @param ip C type : char[20]<br>
	 * @param netmask C type : char[20]<br>
	 * @param manufacturer C type : char[16]<br>
	 * @param platform C type : char[32]<br>
	 * @param system C type : char[32]<br>
	 * @param version C type : char[64]
	 */
	public ipscan_t(byte mac[], byte ip[], byte netmask[], byte manufacturer[], byte platform[], byte system[], byte version[]) {
		super();
		if ((mac.length != this.mac.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.mac = mac;
		if ((ip.length != this.ip.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ip = ip;
		if ((netmask.length != this.netmask.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.netmask = netmask;
		if ((manufacturer.length != this.manufacturer.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.manufacturer = manufacturer;
		if ((platform.length != this.platform.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.platform = platform;
		if ((system.length != this.system.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.system = system;
		if ((version.length != this.version.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.version = version;
	}
	public static class ByReference extends ipscan_t implements Structure.ByReference {
		
	};
	public static class ByValue extends ipscan_t implements Structure.ByValue {
		
	};
}
