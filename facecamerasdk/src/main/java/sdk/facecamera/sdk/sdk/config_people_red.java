package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : config_gw.h:465</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class config_people_red extends Structure {
	public int enable;
	/** C type : lamp_area */
	public lamp_area lamp;
	/** C type : char[64] */
	public byte[] resv = new byte[64];
	public config_people_red() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("enable", "lamp", "resv");
	}
	/**
	 * @param lamp C type : lamp_area<br>
	 * @param resv C type : char[64]
	 */
	public config_people_red(int enable, lamp_area lamp, byte resv[]) {
		super();
		this.enable = enable;
		this.lamp = lamp;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
	}
	public static class ByReference extends config_people_red implements Structure.ByReference {
		
	};
	public static class ByValue extends config_people_red implements Structure.ByValue {
		
	};
}
