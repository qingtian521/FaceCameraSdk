package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \u4e34\u65f6\u9009\u9879\u7684\u914d\u7f6e *****<br>
 * <i>native declaration : config_gw.h:646</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CONF_TEMP extends Structure {
	/** \u5b9e\u65f6\u56fe\u50cf\u5f00\u5173 */
	public byte enableLiveImage;
	/** C type : char[124] */
	public byte[] resv = new byte[124];
	/**
	 * \u673a\u5668\u7801\uff08\u5b57\u7b26\u4e32\u578b\uff09<br>
	 * C type : char[128]
	 */
	public byte[] authKey = new byte[128];
	/**
	 * \u6388\u6743\u7801\uff08\u5b57\u7b26\u4e32\u578b\uff09<br>
	 * C type : char[256]
	 */
	public byte[] authValue = new byte[256];
	/** \u6388\u6743\u8ba4\u8bc1\u7ed3\u679c(AUTH_RESULT) */
	public int authResult;
	public CONF_TEMP() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("enableLiveImage", "resv", "authKey", "authValue", "authResult");
	}
	/**
	 * @param enableLiveImage \u5b9e\u65f6\u56fe\u50cf\u5f00\u5173<br>
	 * @param resv C type : char[124]<br>
	 * @param authKey \u673a\u5668\u7801\uff08\u5b57\u7b26\u4e32\u578b\uff09<br>
	 * C type : char[128]<br>
	 * @param authValue \u6388\u6743\u7801\uff08\u5b57\u7b26\u4e32\u578b\uff09<br>
	 * C type : char[256]<br>
	 * @param authResult \u6388\u6743\u8ba4\u8bc1\u7ed3\u679c(AUTH_RESULT)
	 */
	public CONF_TEMP(byte enableLiveImage, byte resv[], byte authKey[], byte authValue[], int authResult) {
		super();
		this.enableLiveImage = enableLiveImage;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
		if ((authKey.length != this.authKey.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.authKey = authKey;
		if ((authValue.length != this.authValue.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.authValue = authValue;
		this.authResult = authResult;
	}
	public static class ByReference extends CONF_TEMP implements Structure.ByReference {
		
	};
	public static class ByValue extends CONF_TEMP implements Structure.ByValue {
		
	};
}
