package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * TCP\u4e0a\u4f20\u53c2\u6570\u3002<br>
 * <i>native declaration : config_gw.h:788</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TcpClientParam extends Structure {
	/**
	 * \u670d\u52a1\u5668IP\u5730\u5740\u3002<br>
	 * C type : char[16]
	 */
	public byte[] ip = new byte[16];
	/** \u670d\u52a1\u5668\u7aef\u53e3\u3002 */
	public int port;
	/** \u4f7f\u80fd\u5f00\u5173\uff08\u672a\u4f7f\u7528\uff0c\u8be5\u5b57\u6bb5\u4ec5\u4e3a\u517c\u5bb9\u65e7\u534f\u8bae\u800c\u52a0\u5165\uff09\u3002 */
	public byte enable;
	/** \u767b\u5f55\u9a8c\u8bc1\u5f00\u5173\u3002 */
	public byte enable_verify;
	/**
	 * \u767b\u5f55\u9a8c\u8bc1\u7528\u6237\u540d\u3002<br>
	 * C type : char[16]
	 */
	public byte[] user_name = new byte[16];
	/**
	 * \u767b\u5f55\u9a8c\u8bc1\u5bc6\u7801\u3002<br>
	 * C type : char[17]
	 */
	public byte[] passwd = new byte[17];
	/**
	 * \u4fdd\u7559\u5b57\u6bb5\u3002<br>
	 * C type : char[65]
	 */
	public byte[] resv = new byte[65];
	public TcpClientParam() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ip", "port", "enable", "enable_verify", "user_name", "passwd", "resv");
	}
	/**
	 * @param ip \u670d\u52a1\u5668IP\u5730\u5740\u3002<br>
	 * C type : char[16]<br>
	 * @param port \u670d\u52a1\u5668\u7aef\u53e3\u3002<br>
	 * @param enable \u4f7f\u80fd\u5f00\u5173\uff08\u672a\u4f7f\u7528\uff0c\u8be5\u5b57\u6bb5\u4ec5\u4e3a\u517c\u5bb9\u65e7\u534f\u8bae\u800c\u52a0\u5165\uff09\u3002<br>
	 * @param enable_verify \u767b\u5f55\u9a8c\u8bc1\u5f00\u5173\u3002<br>
	 * @param user_name \u767b\u5f55\u9a8c\u8bc1\u7528\u6237\u540d\u3002<br>
	 * C type : char[16]<br>
	 * @param passwd \u767b\u5f55\u9a8c\u8bc1\u5bc6\u7801\u3002<br>
	 * C type : char[17]<br>
	 * @param resv \u4fdd\u7559\u5b57\u6bb5\u3002<br>
	 * C type : char[65]
	 */
	public TcpClientParam(byte ip[], int port, byte enable, byte enable_verify, byte user_name[], byte passwd[], byte resv[]) {
		super();
		if ((ip.length != this.ip.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ip = ip;
		this.port = port;
		this.enable = enable;
		this.enable_verify = enable_verify;
		if ((user_name.length != this.user_name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.user_name = user_name;
		if ((passwd.length != this.passwd.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.passwd = passwd;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
	}
	public static class ByReference extends TcpClientParam implements Structure.ByReference {
		
	};
	public static class ByValue extends TcpClientParam implements Structure.ByValue {
		
	};
}
