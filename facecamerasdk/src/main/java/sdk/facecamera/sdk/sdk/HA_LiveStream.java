package sdk.facecamera.sdk.sdk;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : HASdkDef.h:141</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class HA_LiveStream extends Structure {
	public int w;
	public int h;
	/**
//	 * @see STREAM_FORMAT<br>
	 * C type : STREAM_FORMAT
	 */
	public int format;
	public int streamLen;
	public int streamBufSize;
	/** C type : char* */
	public Pointer streamBuf;
	public int h264_sequence; // 帧号
	public byte channel; //通道号 0:主码流 4:子码流
	public HA_LiveStream() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("w", "h", "format", "streamLen", "streamBufSize", "streamBuf","h264_sequence","channel");
	}
	/**
	 * @param format @see STREAM_FORMAT<br>
	 * C type : STREAM_FORMAT<br>
	 * @param streamBuf C type : char*
	 */
	public HA_LiveStream(int w, int h, int format, int streamLen, int streamBufSize, Pointer streamBuf) {
		super();
		this.w = w;
		this.h = h;
		this.format = format;
		this.streamLen = streamLen;
		this.streamBufSize = streamBufSize;
		this.streamBuf = streamBuf;
	}
	public static class ByReference extends HA_LiveStream implements Structure.ByReference {
		
	};
	public static class ByValue extends HA_LiveStream implements Structure.ByValue {
		
	};
}
