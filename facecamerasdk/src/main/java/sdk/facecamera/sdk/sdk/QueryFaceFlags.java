package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \u4eba\u8138\u67e5\u8be2\u8fd4\u56de<br>
 * <i>native declaration : FaceRecoDef.h:98</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class QueryFaceFlags extends Structure {
	/**
	 * \u4eba\u5458ID<br>
	 * C type : char[20]
	 */
	public byte[] personID = new byte[20];
	/**
	 * \u59d3\u540d<br>
	 * C type : char[16]
	 */
	public byte[] personName = new byte[16];
	/** \u4eba\u8138\u7279\u5f81\u6570\u636e\u5927\u5c0f */
	public int featureSize;
	/**
	 * \u4eba\u8138\u7279\u5f81\u6570\u636e<br>
	 * C type : float[2048]
	 */
	public float[] feature = new float[2048];
	/** \u56fe\u50cf\u6570\u76ee */
	public int imgNum;
	/** \u56fe\u50cf\u5927\u5c0f */
	public int imgSize;
	/**
	 * \u56fe\u50cf\u6570\u636e<br>
	 * C type : unsigned char[10240]
	 */
	public byte[] img = new byte[10240];
	/** C type : char[16] */
	public byte[] resv = new byte[16];
	public QueryFaceFlags() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("personID", "personName", "featureSize", "feature", "imgNum", "imgSize", "img", "resv");
	}
	/**
	 * @param personID \u4eba\u5458ID<br>
	 * C type : char[20]<br>
	 * @param personName \u59d3\u540d<br>
	 * C type : char[16]<br>
	 * @param featureSize \u4eba\u8138\u7279\u5f81\u6570\u636e\u5927\u5c0f<br>
	 * @param feature \u4eba\u8138\u7279\u5f81\u6570\u636e<br>
	 * C type : float[2048]<br>
	 * @param imgNum \u56fe\u50cf\u6570\u76ee<br>
	 * @param imgSize \u56fe\u50cf\u5927\u5c0f<br>
	 * @param img \u56fe\u50cf\u6570\u636e<br>
	 * C type : unsigned char[10240]<br>
	 * @param resv C type : char[16]
	 */
	public QueryFaceFlags(byte personID[], byte personName[], int featureSize, float feature[], int imgNum, int imgSize, byte img[], byte resv[]) {
		super();
		if ((personID.length != this.personID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.personID = personID;
		if ((personName.length != this.personName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.personName = personName;
		this.featureSize = featureSize;
		if ((feature.length != this.feature.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.feature = feature;
		this.imgNum = imgNum;
		this.imgSize = imgSize;
		if ((img.length != this.img.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.img = img;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
	}
	public static class ByReference extends QueryFaceFlags implements Structure.ByReference {
		
	};
	public static class ByValue extends QueryFaceFlags implements Structure.ByValue {
		
	};
}
