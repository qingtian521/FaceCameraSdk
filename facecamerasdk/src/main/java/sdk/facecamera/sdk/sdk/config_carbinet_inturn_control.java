package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \u662f\u5426\u4ea4\u66ff\u63a7\u706f<br>
 * <i>native declaration : config_gw.h:515</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class config_carbinet_inturn_control extends Structure {
	/** \u662f\u5426\u6709\u6548 0\u65e0\u6548 1\u6709\u6548 */
	public int isEnable;
	/**
	 * IP\u5730\u5740<br>
	 * C type : char[64]
	 */
	public byte[] ip = new byte[64];
	public config_carbinet_inturn_control() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("isEnable", "ip");
	}
	/**
	 * @param isEnable \u662f\u5426\u6709\u6548 0\u65e0\u6548 1\u6709\u6548<br>
	 * @param ip IP\u5730\u5740<br>
	 * C type : char[64]
	 */
	public config_carbinet_inturn_control(int isEnable, byte ip[]) {
		super();
		this.isEnable = isEnable;
		if ((ip.length != this.ip.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ip = ip;
	}
	public static class ByReference extends config_carbinet_inturn_control implements Structure.ByReference {
		
	};
	public static class ByValue extends config_carbinet_inturn_control implements Structure.ByValue {
		
	};
}
