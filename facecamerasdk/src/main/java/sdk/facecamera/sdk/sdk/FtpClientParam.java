package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * FTP\u4e0a\u4f20\u53c2\u6570\u3002<br>
 * <i>native declaration : config_gw.h:905</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class FtpClientParam extends Structure {
	/**
	 * \u670d\u52a1\u5668IP\u5730\u5740\u3002<br>
	 * C type : char[16]
	 */
	public byte[] ip = new byte[16];
	/** \u670d\u52a1\u5668\u7aef\u53e3\u3002 */
	public int port;
	/**
	 * \u767b\u5f55\u7528\u6237\u540d\u3002<br>
	 * C type : char[15]
	 */
	public byte[] user = new byte[15];
	/**
	 * \u767b\u5f55\u5bc6\u7801\u3002<br>
	 * C type : char[15]
	 */
	public byte[] password = new byte[15];
	/**
	 * \u4e0a\u4f20\u76ee\u5f55\u3002<br>
	 * C type : char[70]
	 */
	public byte[] pattern = new byte[70];
	public FtpClientParam() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ip", "port", "user", "password", "pattern");
	}
	/**
	 * @param ip \u670d\u52a1\u5668IP\u5730\u5740\u3002<br>
	 * C type : char[16]<br>
	 * @param port \u670d\u52a1\u5668\u7aef\u53e3\u3002<br>
	 * @param user \u767b\u5f55\u7528\u6237\u540d\u3002<br>
	 * C type : char[15]<br>
	 * @param password \u767b\u5f55\u5bc6\u7801\u3002<br>
	 * C type : char[15]<br>
	 * @param pattern \u4e0a\u4f20\u76ee\u5f55\u3002<br>
	 * C type : char[70]
	 */
	public FtpClientParam(byte ip[], int port, byte user[], byte password[], byte pattern[]) {
		super();
		if ((ip.length != this.ip.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ip = ip;
		this.port = port;
		if ((user.length != this.user.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.user = user;
		if ((password.length != this.password.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.password = password;
		if ((pattern.length != this.pattern.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.pattern = pattern;
	}
	public static class ByReference extends FtpClientParam implements Structure.ByReference {
		
	};
	public static class ByValue extends FtpClientParam implements Structure.ByValue {
		
	};
}
