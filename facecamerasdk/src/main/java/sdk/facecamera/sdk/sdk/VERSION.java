package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : HASdkDef.h:233</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VERSION extends Structure {
	/** C type : char[64] */
	public byte[] protocl_version = new byte[64];
	/** C type : char[64] */
	public byte[] arm_version = new byte[64];
	/** C type : char[64] */
	public byte[] arm_buildtime = new byte[64];
	/** C type : char[64] */
	public byte[] arm_code_version = new byte[64];
	/** C type : char[64] */
	public byte[] dsp_version = new byte[64];
	/** C type : char[64] */
	public byte[] dsp_buildtime = new byte[64];
	/** C type : char[64] */
	public byte[] dsp_code_version = new byte[64];
	public short video_width;
	public short video_height;
	public VERSION() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("protocl_version", "arm_version", "arm_buildtime", "arm_code_version", "dsp_version", "dsp_buildtime", "dsp_code_version", "video_width", "video_height");
	}
	/**
	 * @param protocl_version C type : char[64]<br>
	 * @param arm_version C type : char[64]<br>
	 * @param arm_buildtime C type : char[64]<br>
	 * @param arm_code_version C type : char[64]<br>
	 * @param dsp_version C type : char[64]<br>
	 * @param dsp_buildtime C type : char[64]<br>
	 * @param dsp_code_version C type : char[64]
	 */
	public VERSION(byte protocl_version[], byte arm_version[], byte arm_buildtime[], byte arm_code_version[], byte dsp_version[], byte dsp_buildtime[], byte dsp_code_version[], short video_width, short video_height) {
		super();
		if ((protocl_version.length != this.protocl_version.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.protocl_version = protocl_version;
		if ((arm_version.length != this.arm_version.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.arm_version = arm_version;
		if ((arm_buildtime.length != this.arm_buildtime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.arm_buildtime = arm_buildtime;
		if ((arm_code_version.length != this.arm_code_version.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.arm_code_version = arm_code_version;
		if ((dsp_version.length != this.dsp_version.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.dsp_version = dsp_version;
		if ((dsp_buildtime.length != this.dsp_buildtime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.dsp_buildtime = dsp_buildtime;
		if ((dsp_code_version.length != this.dsp_code_version.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.dsp_code_version = dsp_code_version;
		this.video_width = video_width;
		this.video_height = video_height;
	}
	public static class ByReference extends VERSION implements Structure.ByReference {
		
	};
	public static class ByValue extends VERSION implements Structure.ByValue {
		
	};
}
