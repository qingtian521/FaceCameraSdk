package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \u4e0a\u4f20\u53c2\u6570\u3002<br>
 * <i>native declaration : config_gw.h:952</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class UploaderParam extends Structure {
	/**
	 * \u4fdd\u7559\u5b57\u6bb5\u3002<br>
	 * C type : char[4]
	 */
	public byte[] resv = new byte[4];
	/**
	 * \u5ba2\u6237\u7aef\u8fde\u63a5\u53c2\u6570\u3002<br>
	 * C type : ClientParam
	 */
	public ClientParam client;
	public UploaderParam() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("resv", "client");
	}
	/**
	 * @param resv \u4fdd\u7559\u5b57\u6bb5\u3002<br>
	 * C type : char[4]<br>
	 * @param client \u5ba2\u6237\u7aef\u8fde\u63a5\u53c2\u6570\u3002<br>
	 * C type : ClientParam
	 */
	public UploaderParam(byte resv[], ClientParam client) {
		super();
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
		this.client = client;
	}
	public static class ByReference extends UploaderParam implements Structure.ByReference {
		
	};
	public static class ByValue extends UploaderParam implements Structure.ByValue {
		
	};
}
