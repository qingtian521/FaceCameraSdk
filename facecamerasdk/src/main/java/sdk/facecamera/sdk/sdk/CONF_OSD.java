package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * \u6587\u5b57\u53e0\u52a0<br>
 * <i>native declaration : config_gw.h:435</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CONF_OSD extends Structure {
	/** \u6587\u5b57\u8d77\u59cb\u4f4d\u7f6eX\u5750\u6807 */
	public short imgStartX;
	/** \u6587\u5b57\u8d77\u59cb\u4f4d\u7f6eY\u5750\u6807 */
	public short imgStartY;
	/**
	 * ToDo: add for single and composed image<br>
	 * \u6587\u5b57\u5927\u5c0f
	 */
	public byte imgFontSize;
	/**
	 * \u6587\u5b57\u989c\u8272\uff08RGB\uff09<br>
	 * C type : unsigned char[3]
	 */
	public byte[] imgFontColor = new byte[3];
	/**
	 * utf-8<br>
	 * C type : char[512]
	 */
	public byte[] imgOSDRules = new byte[512];
	/**
	 * \u4fdd\u7559<br>
	 * C type : char[16]
	 */
	public byte[] resv = new byte[16];
	public CONF_OSD() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("imgStartX", "imgStartY", "imgFontSize", "imgFontColor", "imgOSDRules", "resv");
	}
	/**
	 * @param imgStartX \u6587\u5b57\u8d77\u59cb\u4f4d\u7f6eX\u5750\u6807<br>
	 * @param imgStartY \u6587\u5b57\u8d77\u59cb\u4f4d\u7f6eY\u5750\u6807<br>
	 * @param imgFontSize ToDo: add for single and composed image<br>
	 * \u6587\u5b57\u5927\u5c0f<br>
	 * @param imgFontColor \u6587\u5b57\u989c\u8272\uff08RGB\uff09<br>
	 * C type : unsigned char[3]<br>
	 * @param imgOSDRules utf-8<br>
	 * C type : char[512]<br>
	 * @param resv \u4fdd\u7559<br>
	 * C type : char[16]
	 */
	public CONF_OSD(short imgStartX, short imgStartY, byte imgFontSize, byte imgFontColor[], byte imgOSDRules[], byte resv[]) {
		super();
		this.imgStartX = imgStartX;
		this.imgStartY = imgStartY;
		this.imgFontSize = imgFontSize;
		if ((imgFontColor.length != this.imgFontColor.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.imgFontColor = imgFontColor;
		if ((imgOSDRules.length != this.imgOSDRules.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.imgOSDRules = imgOSDRules;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
	}
	public static class ByReference extends CONF_OSD implements Structure.ByReference {
		
	};
	public static class ByValue extends CONF_OSD implements Structure.ByValue {
		
	};
}
