package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : FaceRecoDef.h:182</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class FaceRectInfo extends Structure {
	public byte idShowFlag;
	/** C type : char[3] */
	public byte[] resv = new byte[3];
	/** \u8f6e\u5ed3\u6570\u91cf */
	public int rectNum;
	/** C type : FaceRect[32] */
	public FaceRect[] faceRects = new FaceRect[32];
	public FaceRectInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("idShowFlag", "resv", "rectNum", "faceRects");
	}
	/**
	 * @param resv C type : char[3]<br>
	 * @param rectNum \u8f6e\u5ed3\u6570\u91cf<br>
	 * @param faceRects C type : FaceRect[32]
	 */
	public FaceRectInfo(byte idShowFlag, byte resv[], int rectNum, FaceRect faceRects[]) {
		super();
		this.idShowFlag = idShowFlag;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
		this.rectNum = rectNum;
		if ((faceRects.length != this.faceRects.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.faceRects = faceRects;
	}
	public static class ByReference extends FaceRectInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends FaceRectInfo implements Structure.ByValue {
		
	};
}
