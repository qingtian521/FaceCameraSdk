package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : config_gw.h:385</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class config_special extends Structure {
	/** \u5f53\u7ed3\u679c\u6709\u4e24\u5f20\u65f6\u8fdb\u884c\u5408\u5e76 */
	public int merge_two;
	/** \u6ca1\u8d85\u901f\u53ea\u4fdd\u7559\u4e00\u5f20\u56fe\u7247 */
	public int keep_one;
	/**
	 * @see PLATE_FILTER_TYPE<br>
	 * \u8fc7\u6ee4\u7279\u5b9a\u6761\u4ef6\u7684\u8f66\u724c<br>
	 * C type : PLATE_FILTER_TYPE
	 */
	public int plate_filter;
	/** C type : char[32] */
	public byte[] resv = new byte[32];
	public config_special() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("merge_two", "keep_one", "plate_filter", "resv");
	}
	/**
	 * @param merge_two \u5f53\u7ed3\u679c\u6709\u4e24\u5f20\u65f6\u8fdb\u884c\u5408\u5e76<br>
	 * @param keep_one \u6ca1\u8d85\u901f\u53ea\u4fdd\u7559\u4e00\u5f20\u56fe\u7247<br>
	 * @param plate_filter @see PLATE_FILTER_TYPE<br>
	 * \u8fc7\u6ee4\u7279\u5b9a\u6761\u4ef6\u7684\u8f66\u724c<br>
	 * C type : PLATE_FILTER_TYPE<br>
	 * @param resv C type : char[32]
	 */
	public config_special(int merge_two, int keep_one, int plate_filter, byte resv[]) {
		super();
		this.merge_two = merge_two;
		this.keep_one = keep_one;
		this.plate_filter = plate_filter;
		if ((resv.length != this.resv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resv = resv;
	}
	public static class ByReference extends config_special implements Structure.ByReference {
		
	};
	public static class ByValue extends config_special implements Structure.ByValue {
		
	};
}
