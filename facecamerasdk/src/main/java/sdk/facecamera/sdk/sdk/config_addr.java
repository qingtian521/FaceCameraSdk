package sdk.facecamera.sdk.sdk;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : config_gw.h:182</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class config_addr extends Structure {
	/** C type : char[32] */
	public byte[] device_id = new byte[32];
	/** C type : char[32] */
	public byte[] device_name = new byte[32];
	/** C type : char[32] */
	public byte[] addr_id = new byte[32];
	/** C type : char[96] */
	public byte[] addr_name = new byte[96];
	/** C type : char[32] */
	public byte[] direction_id = new byte[32];
	/** C type : char[96] */
	public byte[] direction_name = new byte[96];
	/** \u8f66\u9053\u6570\u76ee */
	public short lane_number;
	/** \u8f66\u9053\u8d77\u59cb\u7f16\u53f7 */
	public short lane_start_id;
	/**
	 * \u8f66\u9053\u4e0e\u8f66\u706f\u5173\u8054<br>
	 * C type : unsigned char[(4)]
	 */
	public byte[] match_light = new byte[4];
	/** \u4e3b\u68c0\u6d4b\u6a21\u5f0f */
	public byte master_mode;
	/** \u4ece\u68c0\u6d4b\u6a21\u5f0f */
	public byte slave_mode;
	/** \u6a21\u5f0f\u5207\u6362\u65f6\u9608\u503c, \u8bbe\u7f6e\u4e3b\u6a21\u5f0f\u591a\u5c11\u6b21\u672a\u68c0\u6d4b\u65f6\u5207\u6362\u5230\u4ece\u6a21\u5f0f */
	public byte mode_change_threshold;
	public byte serial_index;
	/** \u6ce2\u7279\u7387 */
	public int serial_baudrate;
	/** \u6570\u636e\u4f4d */
	public byte serial_databit;
	/** \u662f\u5426\u5f00\u59cb\u6821\u9a8c */
	public byte serial_parity;
	/** \u505c\u6b62\u4f4d */
	public byte serial_stopbit;
	/** C type : char[113] */
	public byte[] resv = new byte[113];
	public config_addr() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("device_id", "device_name", "addr_id", "addr_name", "direction_id", "direction_name", "lane_number", "lane_start_id", "match_light", "master_mode", "slave_mode", "mode_change_threshold", "serial_index", "serial_baudrate", "serial_databit", "serial_parity", "serial_stopbit", "resv");
	}
	public static class ByReference extends config_addr implements Structure.ByReference {
		
	};
	public static class ByValue extends config_addr implements Structure.ByValue {
		
	};
}
